@model DDAC.ViewModels.AddShipViewModel
@{
    ViewBag.Title = "Add Ship";
}

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>

@if (ViewBag.IsSuccess != null)
{
    if (ViewBag.IsSuccess)
    {
        <div class="alert alert-dismissible alert-success">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @ViewBag.Message @Html.ActionLink("Ship Overview", "Index", new { }, new { @class = "alert-link" })
        </div>
    }
    else
    {
        <div class="alert alert-dismissible alert-danger">
            <button type="button" class="close" data-dismiss="alert">&times;</button>
            @ViewBag.Message
        </div>
    }
}

<h2>Create Ship</h2>
@using (Html.BeginForm("CreateShip", "Ship", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @*@Html.HiddenFor(m => m.ShipDetails.Id)*@
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, "", new { @class = "text-danger" })
    

    <div class="row form-group">
        <div class="col-md-7">
            @Html.EditorFor(m=>m.ShipDetails.ShipName, new { htmlAttributes = new { @class = "form-control", placeholder = "Ship Name" } })

        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-7">
            @Html.EditorFor(m => m.ShipDetails.BaySize, new { htmlAttributes = new { @class = "form-control", placeholder = "Bay Size" } })

        </div>
    </div>

    <div class="row form-group">
        <div class="col-md-7">
            @Html.DropDownListFor(m=>m.ShipDetails.Origin, new SelectList(Model.Location, "Origin", "Origin"), "-- From --", new { @class = "form-control", @onchange = "FindDestination()", @id="ship_origin"})

        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-7">
            @Html.DropDownListFor(m => m.ShipDetails.Destination, new SelectList(Enumerable.Empty<SelectListItem>(), "Destination", "Destination"), "-- To --", new { @class = "form-control", @id = "ship_destination" })

        </div>
    </div>
        
    <div class="row form-group">
        <div class="col-md-7">
            <input id="createshipbtn" type="submit", class="btn btn-success" value="Create"/>
        </div>
    </div>  
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        function FindDestination() {
            var origin = $('#ship_origin :selected').text();
            $.ajax({
                url: '@Url.Action("FindDestination")',
                type: "GET",
                dataType: "JSON",
                data: { origin: origin },
                success: function (destination) {
                    $("#ship_destination").html("").append(
                        $('<option></option>').val('').html("-- To --")); // clear before appending new list
                    $.each(destination, function (i, des) {
                        $("#ship_destination").append(
                            $('<option></option>').val(des.Destination).html(des.Destination));
                    });
                }
            });
        }
    </script>

}


        

